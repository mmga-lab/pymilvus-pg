name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: admin
          POSTGRES_USER: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      milvus:
        image: milvusdb/milvus:latest
        env:
          ETCD_ENDPOINTS: etcd:2379
          MINIO_ADDRESS: minio:9000
        ports:
          - 19530:19530
          - 9091:9091
        options: >-
          --health-cmd "curl -f http://localhost:9091/healthz || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

      etcd:
        image: quay.io/coreos/etcd:v3.5.5
        env:
          ETCD_AUTO_COMPACTION_MODE: revision
          ETCD_AUTO_COMPACTION_RETENTION: "1000"
          ETCD_QUOTA_BACKEND_BYTES: "4294967296"
          ETCD_SNAPSHOT_COUNT: "50000"
        ports:
          - 2379:2379
        command: >
          etcd -advertise-client-urls=http://127.0.0.1:2379
          -listen-client-urls http://0.0.0.0:2379
          --data-dir /etcd

      minio:
        image: minio/minio:RELEASE.2023-03-20T20-16-18Z
        env:
          MINIO_ACCESS_KEY: minioadmin
          MINIO_SECRET_KEY: minioadmin
        ports:
          - 9000:9000
          - 9001:9001
        command: minio server /minio_data --console-address ":9001"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install PDM
      run: |
        pip install pdm

    - name: Install dependencies
      run: |
        pdm install --dev

    - name: Wait for Milvus to be ready
      run: |
        timeout 300 bash -c 'until curl -f http://localhost:9091/healthz; do sleep 5; done'

    - name: Wait for PostgreSQL to be ready
      run: |
        timeout 60 bash -c 'until pg_isready -h localhost -p 5432 -U postgres; do sleep 2; done'

    - name: Run unit tests
      run: |
        pdm run pytest tests/test_logger_config.py -v
      env:
        MILVUS_URI: http://localhost:19530
        PG_CONN: postgresql://postgres:admin@localhost:5432/test_db

    - name: Run integration tests
      run: |
        pdm run pytest tests/test_milvus_pg_client.py::TestMilvusPGClientBasic -v
      env:
        MILVUS_URI: http://localhost:19530
        PG_CONN: postgresql://postgres:admin@localhost:5432/test_db

    - name: Run full integration tests
      run: |
        pdm run pytest tests/test_integration.py::TestFullWorkflow::test_complete_workflow -v
      env:
        MILVUS_URI: http://localhost:19530
        PG_CONN: postgresql://postgres:admin@localhost:5432/test_db

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install PDM
      run: |
        pip install pdm

    - name: Install dependencies
      run: |
        pdm install -G lint

    - name: Run ruff linting
      run: |
        pdm run ruff check src/ tests/

    - name: Run ruff formatting check
      run: |
        pdm run ruff format --check src/ tests/

  type-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install PDM
      run: |
        pip install pdm

    - name: Install dependencies
      run: |
        pdm install -G lint

    - name: Run mypy type checking
      run: |
        pdm run mypy src/pymilvus_pg/ --ignore-missing-imports
      continue-on-error: true  # Allow type checking to fail without breaking the build 