[project]
name = "pymilvus-pg"
version = "0.1.3rc2"
description = "Sync Milvus data to PostgreSQL for validation"
authors = [
    {name = "zhuwenxing", email = "wenxing.zhu@zilliz.com"},
]
dependencies = [
    "pymilvus>=2.5.10",
    "psycopg2-binary>=2.9.9",
    "deepdiff>=8.5.0",
    "loguru>=0.7.0",
    "dotenv>=0.9.9",
]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
dev = [
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.pdm.build]
# Include the main source package
includes = ["src/pymilvus_pg"]
# Exclude example and tests directories from the build artifacts
excludes = [
    "example",
    "tests"
]

# Ruff configuration for linting and formatting
[tool.ruff]
# Maximum allowed line length
line-length = 120
# Target Python version
target-version = "py310"
# Excluded directories and files
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".mypy_cache",
    ".vscode"
]
# Enabled linting rules: E (pycodestyle), F (pyflakes), I (isort), B (bugbear), UP (pyupgrade)
# Enable auto-fix for lint errors
fix = true

[tool.ruff.lint]# Enabled linting rules: E (pycodestyle), F (pyflakes), I (isort), B (bugbear), UP (pyupgrade)
select = [
    "E",
    "F",
    "I",
    "B",
    "UP"
]
ignore = ["E501"]
