[project]
name = "pymilvus-pg"
version = "0.1.5rc3"
description = "Sync Milvus data to PostgreSQL for validation"
authors = [
    {name = "zhuwenxing", email = "wenxing.zhu@zilliz.com"},
]
dependencies = [
    "pymilvus>=2.5.10,<3.0.0",
    "psycopg2-binary>=2.9.9,<3.0.0",
    "deepdiff>=8.5.0,<9.0.0",
    "loguru>=0.7.0,<1.0.0",
    "python-dotenv>=0.19.0,<2.0.0",
    "click>=8.0.0,<9.0.0",
    "lmdb>=1.6.2",
]
requires-python = ">=3.10"
readme = "README.md"
license = {text = "MIT"}

[project.scripts]
pymilvus-pg = "pymilvus_pg.cli:cli"

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
lint = [
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.0.0",
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.pdm.build]
# Include the main source package
includes = ["src/pymilvus_pg"]
# Exclude example and tests directories from the build artifacts
excludes = [
    "example",
    "tests"
]

# Ruff configuration for linting and formatting
[tool.ruff]
# Maximum allowed line length
line-length = 120
# Target Python version
target-version = "py310"
# Excluded directories and files
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".mypy_cache",
    ".vscode"
]
# Enabled linting rules: E (pycodestyle), F (pyflakes), I (isort), B (bugbear), UP (pyupgrade)
# Enable auto-fix for lint errors
fix = true

[tool.ruff.lint]# Enabled linting rules: E (pycodestyle), F (pyflakes), I (isort), B (bugbear), UP (pyupgrade)
select = [
    "E",
    "F",
    "I",
    "B",
    "UP"
]
ignore = ["E501"]

# MyPy configuration for type checking
[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true
pretty = true
show_error_codes = true
show_error_context = true
show_column_numbers = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

# Coverage configuration
[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
